<%#
  This file is now a content partial that will be inserted into views/expenses/layout.ejs.
  It no longer needs <html>, <head>, <body>, or direct CSS/JS links (except Chart.js which should be in layout).
  The 'title' variable will be passed from the Express route to layout.ejs.
%>

<div class="container-fluid main-content-wrapper pt-4 pb-4"> <%# Use layout's main-content-wrapper for consistent padding %>
    <h1 class="page-title mb-4">支出统计 <i class="fas fa-chart-pie"></i></h1> <%# Use layout's page-title style %>

    <div class="card shadow-sm mb-4"> <%# Use card and shadow for consistent styling %>
        <div class="card-header bg-white py-3"> <%# Use light background for header for filters %>
            <h5 class="mb-0">筛选条件</h5> <%# Smaller heading for filter section %>
        </div>
        <div class="card-body">
            <form action="/expenses/statistics" method="GET">
                <div class="row"> <%# Use Bootstrap row for form layout %>
                    <div class="form-group col-md-4 col-lg-3 mb-3"> <%# Responsive columns %>
                        <label for="startDate" class="form-label"><i class="far fa-calendar-alt me-2"></i> 开始日期:</label>
                        <input type="date" class="form-control" id="startDate" name="startDate" value="<%= typeof query !== 'undefined' && query.startDate ? query.startDate : '' %>">
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3">
                        <label for="endDate" class="form-label"><i class="far fa-calendar-alt me-2"></i> 结束日期:</label>
                        <input type="date" class="form-control" id="endDate" name="endDate" value="<%= typeof query !== 'undefined' && query.endDate ? query.endDate : '' %>">
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3">
                        <label for="category" class="form-label"><i class="fas fa-tags me-2"></i> 大类:</label>
                        <select class="form-control" id="category" name="category">
                            <option value="">所有大类</option>
                            <% distinctCategories.forEach(cat => { %>
                                <option value="<%= cat %>" <%= typeof query !== 'undefined' && query.category === cat ? 'selected' : '' %>>
                                    <%= cat %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3">
                        <label for="subcategory" class="form-label"><i class="fas fa-tag me-2"></i> 小类:</label>
                        <select class="form-control" id="subcategory" name="subcategory">
                            <option value="">所有小类</option>
                            <% distinctSubcategories.forEach(subcat => { %>
                                <option value="<%= subcat %>" <%= typeof query !== 'undefined' && query.subcategory === subcat ? 'selected' : '' %>>
                                    <%= subcat %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3">
                        <label for="minAmount" class="form-label"><i class="fas fa-minus-circle me-2"></i> 最小金额:</label>
                        <input type="number" class="form-control" id="minAmount" name="minAmount" value="<%= typeof query !== 'undefined' && query.minAmount ? query.minAmount : '' %>">
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3">
                        <label for="maxAmount" class="form-label"><i class="fas fa-plus-circle me-2"></i> 最大金额:</label>
                        <input type="number" class="form-control" id="maxAmount" name="maxAmount" value="<%= typeof query !== 'undefined' && query.maxAmount ? query.maxAmount : '' %>">
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3">
                        <label for="period" class="form-label"><i class="fas fa-chart-bar me-2"></i> 统计方式:</label>
                        <select id="period" name="period" class="form-control">
                            <option value="" <%= typeof query !== 'undefined' && query.period === "" ? 'selected' : '' %>>总计</option>
                            <option value="category" <%= typeof query !== 'undefined' && query.period === "category" ? 'selected' : '' %>>按大类</option>
                            <option value="subcategory" <%= typeof query !== 'undefined' && query.period === "subcategory" ? 'selected' : '' %>>按小类</option>
                            <option value="categoryAndSubcategory" <%= typeof query !== 'undefined' && query.period === "categoryAndSubcategory" ? 'selected' : '' %>>按大类和小类</option>
                            <option value="year" <%= typeof query !== 'undefined' && query.period === "year" ? 'selected' : '' %>>按年</option>
                            <option value="month" <%= typeof query !== 'undefined' && query.period === "month" ? 'selected' : '' %>>按月</option>
                        </select>
                    </div>
                    <div class="form-group col-md-4 col-lg-3 mb-3" id="yearSelectGroup" style="display: <%= typeof query !== 'undefined' && query.period === 'month' ? 'block' : 'none' %>;">
                        <label for="year" class="form-label"><i class="fas fa-calendar me-2"></i> 选择年度:</label>
                        <select id="year" name="year" class="form-control">
                            <% distinctYears.forEach(year => { %>
                                <option value="<%= year %>" <%= typeof query !== 'undefined' && query.year == year ? 'selected' : '' %>>
                                    <%= year %> 年
                                </option>
                            <% }); %>
                        </select>
                    </div>
                </div>
                <div class="d-flex justify-content-end gap-3 mt-3"> <%# Adjusted button group with Bootstrap utilities %>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-filter me-2"></i> 生成统计</button>
                    <a href="/expenses/statistics" class="btn btn-secondary"><i class="fas fa-redo me-2"></i> 重置</a>
                </div>
            </form>
        </div>
    </div>

    <% if (statistics && statistics.length > 0 && query.period !== '') { %>
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-white py-3">
                <h5 class="mb-0">统计图表</h5>
            </div>
            <div class="card-body d-flex justify-content-center align-items-center" style="height: 400px;"> <%# Flexbox for centering canvas %>
                <canvas id="expenseChart"></canvas>
            </div>
        </div>
    <% } else if (query.period === 'month' && (!statistics || statistics.length === 0)) { %>
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-white py-3">
                <h5 class="mb-0">统计图表</h5>
            </div>
            <div class="card-body text-center py-5">
                <i class="fas fa-info-circle text-muted fs-1 mb-3"></i> <%# Larger, muted icon %>
                <p class="text-muted lead">当前年份没有月度支出数据。</p> <%# Lead paragraph for emphasis %>
                <p class="text-muted">请调整筛选条件或选择其他年份。</p>
            </div>
        </div>
    <% } %>

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-white py-3">
            <h5 class="mb-0">统计详情 <i class="fas fa-table"></i></h5>
        </div>
        <div class="card-body p-0"> <%# Remove padding from card-body if table has its own padding %>
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0"> <%# Removed bottom margin for table %>
                    <thead class="table-primary"> <%# Use Bootstrap's table-primary for header %>
                        <tr>
                            <th class="py-3">统计类别</th> <%# Added padding to header cells %>
                            <th class="py-3">总金额</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% let totalOverallAmount = 0; %>
                        <% if (statistics && statistics.length > 0) { %>
                            <% statistics.forEach(item => { %>
                                <tr>
                                    <% if (query.period === 'categoryAndSubcategory') { %>
                                        <td data-label="统计类别"><%= item._id.category %> - <%= item._id.subcategory %></td>
                                    <% } else { %>
                                        <td data-label="统计类别"><%= item._id %></td>
                                    <% } %>
                                    <td data-label="总金额"><%= item.totalAmount.toFixed(2) %></td>
                                </tr>
                                <% totalOverallAmount += item.totalAmount; %>
                            <% }); %>
                            <tr class="table-info font-weight-bold">
                                <td data-label="总计:">总计:</td>
                                <td data-label="总金额"><%= totalOverallAmount.toFixed(2) %></td>
                            </tr>
                        <% } else { %>
                            <tr>
                                <td colspan="2" class="text-center py-5 text-muted">
                                    <i class="fas fa-info-circle fs-1 mb-3"></i>
                                    <p class="lead">没有找到符合条件的统计数据。</p>
                                    <p>请调整筛选条件或生成统计。</p>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center">
        <a href="/expenses" class="btn btn-secondary mt-4"><i class="fas fa-arrow-left me-2"></i> 返回支出列表</a>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Using `|| {}` to ensure the object exists even if it's undefined from the server
        const statisticsData = <%- JSON.stringify(statistics || []) %>;
        const query = <%- JSON.stringify(query || {}) %>; // 传入整个 query 对象
        const periodType = query.period || '';
        const yearSelectGroup = document.getElementById('yearSelectGroup');
        const periodSelect = document.getElementById('period');

        // 根据统计方式显示/隐藏年份选择框
        periodSelect.addEventListener('change', function() {
            if (this.value === 'month') {
                yearSelectGroup.style.display = 'block';
            } else {
                yearSelectGroup.style.display = 'none';
            }
        });

        // 初始化时根据当前 query 显示/隐藏年份选择框
        if (periodType === 'month') {
            yearSelectGroup.style.display = 'block';
        } else {
            yearSelectGroup.style.display = 'none';
        }


        // Only render chart if there's data and a specific period type is selected (not '总计')
        if (statisticsData && statisticsData.length > 0 && periodType !== '') {
            let labels = statisticsData.map(item => {
                if (periodType === 'categoryAndSubcategory') {
                    // Ensure _id exists and has category/subcategory properties
                    return `${item._id && item._id.category ? item._id.category : '未知大类'} - ${item._id && item._id.subcategory ? item._id.subcategory : '未知小类'}`;
                }
                return item._id;
            });
            let data = statisticsData.map(item => item.totalAmount); // Make data mutable for month sorting
            let chartType = 'bar'; // Default to bar chart
            let titleText = '支出统计';
            let xAxesTitle = '类别';
            let yAxesTitle = '金额';

            if (periodType === 'category') {
                chartType = 'pie'; // Use pie chart for category
                titleText = '支出按大类统计';
            } else if (periodType === 'subcategory') {
                chartType = 'pie'; // Use pie chart for subcategory
                titleText = '支出按小类统计';
            } else if (periodType === 'categoryAndSubcategory') {
                chartType = 'bar'; // Bar chart is usually better for combined categories
                titleText = '支出按大类和小类统计';
                xAxesTitle = '大类 - 小类';
            } else if (periodType === 'year') {
                titleText = '支出按年份统计';
                xAxesTitle = '年份';
            } else if (periodType === 'month') {
                chartType = 'line'; // Use line chart for month
                titleText = '支出按月份统计 (' + (query.year || '所有') + '年)';
                xAxesTitle = '月份';
                yAxesTitle = '金额';
                // 确保月份标签是正确的顺序
                const monthNames = ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"];
                // 创建一个包含所有12个月份的对象，初始金额为0
                const monthlyData = {};
                for (let i = 1; i <= 12; i++) {
                    monthlyData[String(i)] = 0;
                }
                // 将后端返回的数据填充到 monthlyData
                statisticsData.forEach(item => {
                    monthlyData[item._id] = item.totalAmount;
                });
                // 生成排序后的标签和数据
                labels = Object.keys(monthlyData).sort((a, b) => parseInt(a) - parseInt(b)).map(monthNum => monthNames[parseInt(monthNum) - 1]);
                data = Object.keys(monthlyData).sort((a, b) => parseInt(a) - parseInt(b)).map(monthNum => monthlyData[monthNum]);
            }

            const backgroundColors = [
                'rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)',
                'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)',
                'rgba(199, 199, 199, 0.7)', 'rgba(83, 102, 255, 0.7)', 'rgba(201, 203, 207, 0.7)',
                'rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)'
            ];
            const borderColors = [
                'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)',
                'rgba(199, 199, 199, 1)', 'rgba(83, 102, 255, 1)', 'rgba(201, 203, 207, 1)',
                'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'
            ];

            const ctx = document.getElementById('expenseChart').getContext('2d');
            new Chart(ctx, {
                type: chartType,
                data: {
                    labels: labels,
                    datasets: [{
                        label: '总金额',
                        data: data,
                        backgroundColor: chartType === 'line' ? 'rgba(0, 123, 255, 0.2)' : backgroundColors.slice(0, labels.length), // Line chart uses fill
                        borderColor: chartType === 'line' ? 'rgba(0, 123, 255, 1)' : borderColors.slice(0, labels.length),
                        borderWidth: 1,
                        fill: chartType === 'line' ? true : false, // Fill area under line for line chart
                        tension: chartType === 'line' ? 0.4 : 0 // Smooth curve for line chart
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: titleText,
                            font: {
                                size: 18
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (chartType === 'line' || chartType === 'bar') {
                                        label += context.parsed.y.toFixed(2);
                                    } else if (chartType === 'pie') {
                                        const total = context.dataset.data.reduce((sum, value) => sum + value, 0);
                                        const percentage = (context.parsed / total * 100).toFixed(1);
                                        label += context.parsed.toFixed(2) + ' (' + percentage + '%)';
                                    }
                                    return label;
                                }
                            }
                        }
                    },
                    scales: chartType === 'pie' ? {} : { // No scales for pie chart
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: yAxesTitle
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: xAxesTitle
                            }
                        }
                    }
                }
            });
        }
    });
</script>